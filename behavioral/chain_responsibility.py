"""
Цепочка обязанностей — это поведенческий паттерн проектирования, который позволяет передавать запросы последовательно по
цепочке обработчиков. Каждый последующий обработчик решает, может ли он обработать запрос сам и стоит ли передавать запрос дальше по цепи.
Проблема:
Хотим выполнять разные проверки, например: только авторизованные пользователи могли создавать заказы или доступ к
подробностям заказа был у админов.
Мы понимаем что проверки нужно выполнять последовательно, так как иногда не имеет смысла делать следующую проверку.
За несколько месяцев добавилось еще множество проверок. Код становится более запутанным. Поддерживать такой код затратно и хлопотно.

Решение:
Цепочка обязанностей базируется на том, чтобы превратить отдельные поведения в объекты. В нашем случае каждая проверка
переедет в отдельный класс с единственным методом выполнения. Данные запроса, над которым происходит проверка, будут
передаваться в метод как аргументы.

А теперь по-настоящему важный этап. Паттерн предлагает связать объекты обработчиков в одну цепь. Каждый из них будет иметь
ссылку на следующий обработчик в цепи. Таким образом, при получении запроса обработчик сможет не только сам что-то с ним
сделать, но и передать обработку следующему объекту в цепочке.

Передавая запросы в первый обработчик мы должны быть уверены, что все объекты в цепи смогут его обработать. Длина цепочки не имеет значения.
Обработчик не обязательно передаст запрос дальше. Например: если у нас много обработчиков и мы понимаем, что с запросом
что-то не так, то нет смысла тратить ресурсы на дальнейшие проверки.
"""